baud
_!@@!_
0.1
_!@@!_
double getInterpolatedValue(double[] sampleData, double sampleIndex)
{
	if (sampleIndex > sampleData.Length - 1) sampleIndex = sampleData.Length - 1;
	else if (sampleIndex < 0 + 1) sampleIndex = 0;

	double proportion = sampleIndex - Math.Truncate(sampleIndex);
	double v1 = sampleData[(int)Math.Truncate(sampleIndex)];
	double v2 = sampleData[(int)Math.Ceiling(sampleIndex)];
	return v2 * proportion + v1 * (1 - proportion);
}
double getLoopedInterpolatedValue(double[] sampleData, double sampleIndex)
{
	while((sampleIndex<0))
		sampleIndex+=sampleData.Length ;
	//if (sampleIndex<0) sampleIndex+=sampleData.Length ;
	//if (sampleIndex<0) sampleIndex+=sampleData.Length ;
	sampleIndex=sampleIndex%sampleData.Length;
	
	if ((int)Math.Ceiling(sampleIndex)>=sampleData.Length)
		sampleIndex -= 1; //wow, really a hack
	double proportion = sampleIndex - Math.Truncate(sampleIndex);
	double v1 = sampleData[(int)Math.Truncate(sampleIndex)];
	double v2 = sampleData[(int)Math.Ceiling(sampleIndex)];
	return v2 * proportion + v1 * (1 - proportion);
}
//$$Main

//load from doubles
WaveAudio pseudoAudio = new WaveAudio(@"C:\pydev\audio\dpendfinal\pseudoaudio.wav");

//so, now I have this pseudoAudio. let's use it to scrub through a sine wave!
WaveAudio src = new WaveAudio(@"C:\pydev\audio\dpendfinal\lpdrum.wav"); //Media/loop/drumloop.wav (728,356 bytes)
WaveAudio wout = new WaveAudio(1);
wout.LengthInSamples = pseudoAudio.LengthInSamples*9;
for (int i=0; i<wout.LengthInSamples; i++)
{
	wout.data[0][i] = getLoopedInterpolatedValue(src.data[0], 3*(src.LengthInSamples)*
		getLoopedInterpolatedValue(pseudoAudio.data[0], i/8.5));
		
}



result=wout;


//$$EndMain


_!@@!_
1
_!@@!_
0
_!@@!_
0.0001
_!@@!_
0
_!@@!_
0
_!@@!_
